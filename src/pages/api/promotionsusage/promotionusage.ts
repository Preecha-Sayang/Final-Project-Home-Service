// src/app/api/promotions/promotionusage/route.ts
import { NextRequest, NextResponse } from "next/server";

export interface PromotionUsageRequest {
  code: string;
  userId: string;
  orderAmount: number;
  orderId?: string;
  preview?: boolean;
}

export interface PromotionUsageResponse {
  ok: boolean;
  message: string;
  discount?: number;
  finalAmount?: number;
  [key: string]: any; // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏¥‡πà‡∏° field ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏≠‡∏á
}

export async function POST(
  req: NextRequest
): Promise<NextResponse<PromotionUsageResponse>> {
  try {
    const body: PromotionUsageRequest = await req.json();
    const { code, userId, orderAmount, orderId, preview } = body;

    // üëâ ‡πÉ‡∏™‡πà logic ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
    // ‡πÄ‡∏ä‡πà‡∏ô ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î, ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î, ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô

    return NextResponse.json({
      ok: true,
      message: "Promotion usage handled successfully",
    });
  } catch (error) {
    console.error(error);
    return NextResponse.json(
      { ok: false, message: "Internal Server Error" },
      { status: 500 }
    );
  }
}
